@model FinalCapstone.Models.MTAppointViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:150px">
        <h4>@Model.MassageTherapist.FirstName's Schedule</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MassageTherapist.Id)
        @Html.HiddenFor(model => model.Client.Id)

        @if (User.IsInRole("Therapist") == true)
        {
            if (Model.MassageTherapist.SessionPerDay > 0)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.MassageTherapist.Schedule1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MassageTherapist.Schedule1, Model.SetTime)
                        @Html.ValidationMessageFor(model => model.SetTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            if (Model.MassageTherapist.SessionPerDay > 1)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.MassageTherapist.Schedule2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MassageTherapist.Schedule2, Model.SetTime)
                        @Html.ValidationMessageFor(model => model.SetTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            if (Model.MassageTherapist.SessionPerDay > 2)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.MassageTherapist.Schedule3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MassageTherapist.Schedule3, Model.SetTime)
                        @Html.ValidationMessageFor(model => model.SetTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            if (Model.MassageTherapist.SessionPerDay > 3)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.MassageTherapist.Schedule4, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MassageTherapist.Schedule4, Model.SetTime)
                        @Html.ValidationMessageFor(model => model.SetTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        @if (User.IsInRole("Client") == true)
        {
            if (Model.MassageTherapist.SessionPerDay > 0)
            {
                if (Model.MassageTherapist.IsOpen1 == false)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.MassageTherapist.Schedule1, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DisplayFor(model => model.MassageTherapist.Schedule1)
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.MassageTherapist.IsOpen1)
                            @Html.ValidationMessageFor(model => model.MassageTherapist.IsOpen1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
            if (Model.MassageTherapist.SessionPerDay > 1)
            {
                if (Model.MassageTherapist.IsOpen2 == false)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.MassageTherapist.Schedule2, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DisplayFor(model => model.MassageTherapist.Schedule2)
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.MassageTherapist.IsOpen2)
                            @Html.ValidationMessageFor(model => model.MassageTherapist.IsOpen2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
            if (Model.MassageTherapist.SessionPerDay > 2)
            {
                if (Model.MassageTherapist.IsOpen3 == false)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.MassageTherapist.Schedule3, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DisplayFor(model => model.MassageTherapist.Schedule3)
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.MassageTherapist.IsOpen3)
                            @Html.ValidationMessageFor(model => model.MassageTherapist.IsOpen3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
            if (Model.MassageTherapist.SessionPerDay > 3)
            {
                if (Model.MassageTherapist.IsOpen4 == false)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.MassageTherapist.Schedule4, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DisplayFor(model => model.MassageTherapist.Schedule4)
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.MassageTherapist.IsOpen4)
                            @Html.ValidationMessageFor(model => model.MassageTherapist.IsOpen4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
        }
        @if (User.IsInRole("Therapist") == true)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Set Availibility Time" class="btn btn-default" />
                </div>
            </div>
        }
        @if (User.IsInRole("Client") == true)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Book Appointment Time" class="btn btn-default" />
                </div>
            </div>
        }

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
